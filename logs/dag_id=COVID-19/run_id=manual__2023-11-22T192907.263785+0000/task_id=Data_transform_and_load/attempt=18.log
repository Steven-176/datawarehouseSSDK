[2023-11-24T19:46:31.611+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: COVID-19.Data_transform_and_load manual__2023-11-22T19:29:07.263785+00:00 [queued]>
[2023-11-24T19:46:31.624+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: COVID-19.Data_transform_and_load manual__2023-11-22T19:29:07.263785+00:00 [queued]>
[2023-11-24T19:46:31.625+0000] {taskinstance.py:1361} INFO - Starting attempt 18 of 18
[2023-11-24T19:46:31.641+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): Data_transform_and_load> on 2023-11-22 19:29:07.263785+00:00
[2023-11-24T19:46:31.647+0000] {standard_task_runner.py:57} INFO - Started process 2106 to run task
[2023-11-24T19:46:31.649+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'COVID-19', 'Data_transform_and_load', 'manual__2023-11-22T19:29:07.263785+00:00', '--job-id', '96', '--raw', '--subdir', 'DAGS_FOLDER/dag_etl.py', '--cfg-path', '/tmp/tmp4bwasx7n']
[2023-11-24T19:46:31.653+0000] {standard_task_runner.py:85} INFO - Job 96: Subtask Data_transform_and_load
[2023-11-24T19:46:31.710+0000] {task_command.py:416} INFO - Running <TaskInstance: COVID-19.Data_transform_and_load manual__2023-11-22T19:29:07.263785+00:00 [running]> on host 3742b108fdc7
[2023-11-24T19:46:31.982+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='COVID-19' AIRFLOW_CTX_TASK_ID='Data_transform_and_load' AIRFLOW_CTX_EXECUTION_DATE='2023-11-22T19:29:07.263785+00:00' AIRFLOW_CTX_TRY_NUMBER='18' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-22T19:29:07.263785+00:00'
[2023-11-24T19:46:32.274+0000] {logging_mixin.py:151} INFO - dep                      object
date_de_passage          object
sursaud_cl_age_corona    object
nbre_pass_corona         object
nbre_pass_tot            object
nbre_hospit_corona       object
nbre_pass_corona_h       object
nbre_pass_corona_f       object
nbre_pass_tot_h          object
nbre_pass_tot_f          object
nbre_hospit_corona_h     object
nbre_hospit_corona_f     object
nbre_acte_corona         object
nbre_acte_tot            object
nbre_acte_corona_h       object
nbre_acte_corona_f       object
nbre_acte_tot_h          object
nbre_acte_tot_f          object
dtype: object
[2023-11-24T19:46:32.293+0000] {logging_mixin.py:151} INFO -         dep date_de_passage  ... nbre_acte_tot_h nbre_acte_tot_f
0        01      2022-12-26  ...             NaN             NaN
1        01      2022-12-26  ...             NaN             NaN
2        01      2022-12-26  ...             NaN             NaN
3        01      2022-12-26  ...             NaN             NaN
4        01      2022-12-26  ...             NaN             NaN
...     ...             ...  ...             ...             ...
214216  976      2023-10-24  ...             NaN             NaN
214217  976      2023-10-24  ...             NaN             NaN
214218  976      2023-10-24  ...             NaN             NaN
214219  976      2023-10-24  ...             NaN             NaN
214220  976      2023-10-24  ...             NaN             NaN

[214221 rows x 18 columns]
[2023-11-24T19:46:32.421+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:71: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_passage['nbre_pass_corona'] = df_passage['nbre_pass_corona'].fillna(0).astype(int)

[2023-11-24T19:46:32.445+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:72: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_passage['nbre_pass_tot'] = df_passage['nbre_pass_tot'].fillna(0).astype(int)

[2023-11-24T19:46:32.467+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_passage['nbre_pass_corona_h'] = df_passage['nbre_pass_corona_h'].fillna(0).astype(int)

[2023-11-24T19:46:32.485+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_passage['nbre_pass_corona_f'] = df_passage['nbre_pass_corona_f'].fillna(0).astype(int)

[2023-11-24T19:46:32.502+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_passage['nbre_pass_tot_h'] = df_passage['nbre_pass_tot_h'].fillna(0).astype(int)

[2023-11-24T19:46:32.520+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:76: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_passage['nbre_pass_tot_f'] = df_passage['nbre_pass_tot_f'].fillna(0).astype(int)

[2023-11-24T19:46:32.550+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:83: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_hospit['nbre_hospit_corona'] = df_hospit['nbre_hospit_corona'].fillna(0).astype(int)

[2023-11-24T19:46:32.565+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:84: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_hospit['nbre_hospit_corona_h'] = df_hospit['nbre_hospit_corona_h'].fillna(0).astype(int)

[2023-11-24T19:46:32.581+0000] {warnings.py:109} WARNING - /opt/***/dags/dag_etl.py:85: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_hospit['nbre_hospit_corona_f'] = df_hospit['nbre_hospit_corona_f'].fillna(0).astype(int)

[2023-11-24T19:46:32.593+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-24T19:46:33.323+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 192, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 209, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/dag_etl.py", line 110, in data_transform_and_load
    (int(row['nbre_pass_corona']), int(row['nbre_pass_tot']), int(row['nbre_pass_corona_h']), int(row['nbre_pass_corona_f']), int(row['nbre_pass_tot_h']), int(row['nbre_pass_tot_f'])))
ValueError: cannot convert float NaN to integer
[2023-11-24T19:46:33.333+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=COVID-19, task_id=Data_transform_and_load, execution_date=20231122T192907, start_date=20231124T194631, end_date=20231124T194633
[2023-11-24T19:46:33.351+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 96 for task Data_transform_and_load (cannot convert float NaN to integer; 2106)
[2023-11-24T19:46:33.392+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-11-24T19:46:33.411+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
