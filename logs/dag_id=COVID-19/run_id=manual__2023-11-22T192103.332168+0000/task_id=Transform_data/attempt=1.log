[2023-11-22T19:21:12.594+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: COVID-19.Transform_data manual__2023-11-22T19:21:03.332168+00:00 [queued]>
[2023-11-22T19:21:12.612+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: COVID-19.Transform_data manual__2023-11-22T19:21:03.332168+00:00 [queued]>
[2023-11-22T19:21:12.613+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-22T19:21:12.637+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): Transform_data> on 2023-11-22 19:21:03.332168+00:00
[2023-11-22T19:21:12.644+0000] {standard_task_runner.py:57} INFO - Started process 395 to run task
[2023-11-22T19:21:12.649+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'COVID-19', 'Transform_data', 'manual__2023-11-22T19:21:03.332168+00:00', '--job-id', '35', '--raw', '--subdir', 'DAGS_FOLDER/dag_etl.py', '--cfg-path', '/tmp/tmp0fvv3_ob']
[2023-11-22T19:21:12.654+0000] {standard_task_runner.py:85} INFO - Job 35: Subtask Transform_data
[2023-11-22T19:21:12.720+0000] {task_command.py:416} INFO - Running <TaskInstance: COVID-19.Transform_data manual__2023-11-22T19:21:03.332168+00:00 [running]> on host fa089f974649
[2023-11-22T19:21:13.020+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='COVID-19' AIRFLOW_CTX_TASK_ID='Transform_data' AIRFLOW_CTX_EXECUTION_DATE='2023-11-22T19:21:03.332168+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-22T19:21:03.332168+00:00'
[2023-11-22T19:21:14.522+0000] {python.py:194} INFO - Done. Returned value was:         dep date_de_passage  ... nbre_hospit_corona_h nbre_hospit_corona_f
0        01      2022-12-26  ...                    1                    3
1        01      2022-12-26  ...                  NaN                  NaN
2        01      2022-12-26  ...                  NaN                  NaN
3        01      2022-12-26  ...                  NaN                  NaN
4        01      2022-12-26  ...                  NaN                  NaN
...     ...             ...  ...                  ...                  ...
214216  976      2023-10-24  ...                  NaN                  NaN
214217  976      2023-10-24  ...                  NaN                  NaN
214218  976      2023-10-24  ...                  NaN                  NaN
214219  976      2023-10-24  ...                  NaN                  NaN
214220  976      2023-10-24  ...                  NaN                  NaN

[214221 rows x 12 columns]
[2023-11-22T19:21:14.687+0000] {xcom.py:661} ERROR - Object of type DataFrame is not JSON serializable. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config or make sure to decorate your object with attr.
[2023-11-22T19:21:14.690+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 91, in default
    return serialize(o)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/serialization/serde.py", line 143, in serialize
    data, classname, version, is_serialized = _serializers[qn].serialize(o)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/serialization/serializers/pandas.py", line 49, in serialize
    table = pa.Table.from_pandas(o)
  File "pyarrow/table.pxi", line 3557, in pyarrow.lib.Table.from_pandas
  File "/home/airflow/.local/lib/python3.8/site-packages/pyarrow/pandas_compat.py", line 624, in dataframe_to_arrays
    arrays[i] = maybe_fut.result()
  File "/usr/local/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/local/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/pyarrow/pandas_compat.py", line 598, in convert_column
    raise e
  File "/home/airflow/.local/lib/python3.8/site-packages/pyarrow/pandas_compat.py", line 592, in convert_column
    result = pa.array(col, type=type_, from_pandas=True, safe=safe)
  File "pyarrow/array.pxi", line 316, in pyarrow.lib.array
  File "pyarrow/array.pxi", line 83, in pyarrow.lib._ndarray_to_array
  File "pyarrow/error.pxi", line 123, in pyarrow.lib.check_status
pyarrow.lib.ArrowTypeError: ("Expected bytes, got a 'int' object", 'Conversion failed for column nbre_pass_corona with type object')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 74, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 2479, in xcom_push
    XCom.set(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 74, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/xcom.py", line 244, in set
    value = cls.serialize_value(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/xcom.py", line 659, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
  File "/usr/local/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 104, in encode
    return super().encode(o)
  File "/usr/local/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 93, in default
    return super().default(o)
  File "/usr/local/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
[2023-11-22T19:21:14.705+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=COVID-19, task_id=Transform_data, execution_date=20231122T192103, start_date=20231122T192112, end_date=20231122T192114
[2023-11-22T19:21:14.734+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 35 for task Transform_data (Object of type DataFrame is not JSON serializable; 395)
[2023-11-22T19:21:14.754+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-11-22T19:21:14.778+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
